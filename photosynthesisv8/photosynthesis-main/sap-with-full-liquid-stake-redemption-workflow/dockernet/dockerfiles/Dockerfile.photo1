# Builder stage
FROM golang:1.19.5 AS go-builder

# Arguments for the build stage
ARG arch=x86_64
ARG libwasmvm_version=v1.1.1
ARG libwasmvm_aarch64_sha=9ecb037336bd56076573dc18c26631a9d2099a7f2b40dc04b6cae31ffb4c8f9a
ARG libwasmvm_amd64_sha=6e4de7ba9bad4ae9679c7f9ecf7e283dd0160e71567c6a7be6ae47c81ebe7f3

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates build-essential cron git gdb golang vim sudo
RUN apt-get update && apt-get install -y libc6-dev

# Create necessary directories and files
RUN mkdir -p /var/log/supervisor
RUN touch /var/log/cron.log
RUN mkdir -p /code

# Copy the application code to the container
WORKDIR /code
COPY . .
COPY ./start.sh /start.sh
COPY ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf
RUN chmod +x /start.sh

# Add libwasmvm
ADD https://github.com/CosmWasm/wasmvm/releases/download/$libwasmvm_version/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a
ADD https://github.com/CosmWasm/wasmvm/releases/download/$libwasmvm_version/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a
RUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep $libwasmvm_aarch64_sha
RUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep $libwasmvm_amd64_sha
RUN cp /lib/libwasmvm_muslc.${arch}.a /lib/libwasmvm_muslc.a
RUN apt-get update && apt-get install -y libc6-dev
# Build the application
RUN LEDGER_ENABLED=false BUILD_TAGS=muslc make VERBOSE=1 build
RUN echo "Ensuring binary is statically linked ..." && (file /code/build/archwayd | grep "statically linked")

# Final stage
FROM ubuntu:latest

# Install supervisor and create log directory
#RUN apt-get update && apt-get install -y --no-install-recommends supervisor sudo rsyslog
RUN mkdir -p /var/log/supervisor

# Copy binary from builder
COPY --from=go-builder /code/build/archwayd /usr/local/bin
COPY --from=go-builder /start.sh /start.sh
COPY --from=go-builder /etc/supervisor/conf.d/supervisord.conf /etc/supervisord.conf
# Add user and update permissions
RUN groupadd -g 1000 photo && \
    useradd -m -s /bin/bash -g photo photo && \
    echo 'photo ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers && \
    echo photo >> /etc/cron.allow

USER 1000
WORKDIR /home/photo

EXPOSE 26657 26656 1317 9091
USER root
RUN mkdir -p /logs && mkdir -p /home/photo/logs
#USER 1000
CMD ["/start.sh"]
